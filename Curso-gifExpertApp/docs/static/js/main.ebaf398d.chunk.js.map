{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","imputValue","setImputValue","onSubmit","e","preventDefault","length","categories","console","log","type","onChange","target","value","getGifs","categori","a","fetch","encodeURI","resp","json","data","img","map","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","categorie","loading","stateGifs","setstateGifs","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","props","ReactDOM","render","document","getElementById"],"mappings":"uNAoCeA,EAhCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OAEI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAS,GACnBP,GAAe,SAAAQ,GAAU,OAAKN,GAAL,mBAAoBM,OAGjDL,EAAc,IACdM,QAAQC,IAAI,sBAKZ,SACI,uBAAOC,KAAK,OAAOC,SAlBD,SAACP,GACnBF,EAAcE,EAAEQ,OAAOC,QAiB0BA,MAAQZ,O,uBCzB/Da,EAAO,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,4DAEA,+BACG,mCAHH,SAKOC,MAAM,WAAD,OAHZ,+BAGY,oBAFT,mCAES,cAAuCC,UAAUH,GAAjD,cALZ,cAKNI,EALM,gBAOSA,EAAKC,OAPd,uBAOLC,EAPK,EAOLA,KAEDC,EAAMD,EAAKE,KAAK,SAAAD,GAAQ,IAAD,EACzB,MAAO,CACHE,GAAIF,EAAIE,GACRC,MAAOH,EAAIG,MACXC,IAAG,UAAEJ,EAAIK,cAAN,aAAE,EAAYC,iBAAiBF,QAb9B,kBAiBLJ,GAjBK,4CAAH,sDCYEO,EATK,SAAC,GAAW,IAAVP,EAAS,EAATA,IAClB,OACI,sBAAKQ,UAAU,yCAAf,UACI,qBAAKC,IAAQT,EAAII,IAAMM,IAAMV,EAAIG,QAChC,4BAAIH,EAAIG,YCgCNQ,EAnCC,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAId,ECJiB,SAACA,GAElB,MAAkClC,mBAAS,CACvCqB,KAAM,GACNc,SAAQ,IAFZ,mBAAOC,EAAP,KAAkBC,EAAlB,KAiBA,OAZAC,qBAAU,WACNxB,EAAQoB,GAAWK,MAAM,SAAAC,GACtBhC,QAAQC,IAAI+B,GACZC,YAAW,WACVJ,EAAa,CACThB,KAAKmB,EACLL,SAAQ,MAEV,WAEP,CAAED,IAEEE,EDf2BM,CAAaR,GAAlCP,EAAb,EAAQN,KAAcc,EAAtB,EAAsBA,QAKtB,OACI,qCACI,oBAAIL,UAAU,oCAAd,SAAmDI,IAGjDC,GAAW,mBAAGL,UAAU,mCAAb,qBACZ,qBAAKA,UAAW,YAAhB,SACG,6BAEQH,EAAOJ,KAAK,SAACD,GACT,OACI,6BAAiB,cAAC,EAAD,CAA6BA,IAAMA,GAAfA,EAAIE,KAAhCF,EAAIE,eEO9BmB,EA3BM,SAACC,GAIlB,MAAoC5C,mBAAS,CAAC,gBAAiB,oBAAqB,qBAAsB,gBAA1G,mBAAOO,EAAP,KAAmBR,EAAnB,KAEA,OACI,qCAEI,8CAEA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEOQ,EAAWgB,KAAK,SAAAW,GAAS,OAAI,6BAAoB,cAAC,EAAD,CAASA,UAAWA,KAA/BA,YCfzDW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ebaf398d.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\n//rafcp\nconst AddCategory = ({setCategories}) => {\n\n    const [imputValue, setImputValue] = useState('');\n\n    const handleImputChange = (e) => {\n            setImputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        if(imputValue.length > 0){\n            setCategories( categories => [imputValue, ...categories] );\n        }\n\n        setImputValue(\"\");\n        console.log('Submit realizado!')\n    }\n\n    return (\n \n        <form onSubmit = {handleSubmit}>\n            <input type='text' onChange= {handleImputChange} value={ imputValue } />\n        </form>\n\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n\n\n\n","\nconst getGifs = async(categori) => {\n\n    const url = 'api.giphy.com/v1/gifs/search';\n    const apikey = '5zhBBQiOnZ4UPrJ24rYitOpHtoGYP4T2';\n\n    const resp = await fetch(`https://${url}?api_key=${apikey}&q=${encodeURI(categori)}&limit=10`);\n\n    const {data} = await resp.json();\n\n    const img = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return img;\n}\n\nexport {getGifs};","//rafcp\nimport React from 'react';\nimport 'animate.css';\n\nconst GifGridItem = ({img}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">  \n            <img src = { img.url } alt= {img.title} />\n             <p>{img.title}</p>\n        </div>\n    )\n}\n\nexport default GifGridItem;\n","//rafcp\nimport React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem'\n\nconst GifGrid = ({categorie}) => {\n\n    //const [counter, setCount] = useState(0);\n\n    const { data:images , loading } = useFetchGifs(categorie);\n\n    //llamada a funciones asincronas fuera del render\n    //getGifs();\n\n    return (\n        <>\n            <h3 className='animate__animated animate__fadeIn'>{categorie}</h3> \n\n            {/** Forma de comprobar que loading es true */}\n            { loading && <p className='animate__animated animate__flash'>Loading</p> }\n            {<div className =\"card-grid\">\n                <ul>\n                    {\n                        images.map( (img) => {\n                            return (\n                                <li key={img.id}><GifGridItem key ={ img.id } img={ img } /></li>\n                            )\n                        })\n                    }\n                </ul>\n                </div>\n            }\n        </>\n    )\n}\n\nGifGrid.propTypes = {\n\n}\n\nexport default GifGrid\n","//rafcp\nimport {useState, useEffect} from 'react';\n\nimport {getGifs} from '../helpers/getGifs'\n\nconst useFetchGifs = (categorie) => {\n\n    const [stateGifs, setstateGifs] = useState({\n        data: [],\n        loading:true\n    })\n\n    useEffect(() => {\n        getGifs(categorie).then( imgs => {\n           console.log(imgs);\n           setTimeout(() => {\n            setstateGifs({\n                data:imgs,\n                loading:false\n            })\n           }, 1500)\n       })\n    }, [ categorie ] );\n\n    return stateGifs;\n}\n\nexport { useFetchGifs }\n\n","import React, {useState} from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid'\n\n//rafcp\nconst GifExpertApp = (props) => {\n    \n    //const categories = ['Dragon Ball Z', 'Dragon Ball Super', 'Singueki no kioyin', 'Saint seiya'];\n    \n    const [categories, setCategories] = useState(['Dragon Ball Z', 'Dragon Ball Super', 'Shingeki no Kyojin', 'Saint seiya']);\n\n    return (\n        <>  \n            {/**GifExpertApp */}\n            <h2>GifExpertApp</h2>\n\n            <AddCategory setCategories={ setCategories }/>\n            <hr/>\n            \n            <ol>\n                {\n                   categories.map( categorie => <li key={categorie}><GifGrid categorie={categorie}/></li>)\n                }\n            </ol>\n        </>\n    )\n}\n\nGifExpertApp.propTypes = {\n\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'animate.css'\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}